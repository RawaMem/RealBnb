#!/usr/bin/env node
const { port } = require('../config');
const app = require('../app');
const db = require('../db/models');

//websocket
const { createServer } = require('http');
const { Server } = require('socket.io');
const httpServer = createServer(app);
const io = new Server(httpServer, {
  cors: {
    origin: 'http://localhost:3000',
    methods: ["GET", "POST", "PUT", "PATCH", "DELETE"]
  }
});
const addString = string => {
  return string + " testing"
};

io.on("connection", socket => {
  console.log(`THIS IS THE SOCKET ID IN BIN WWW ${socket.id}`)

  socket.on('message', async (data) => {
    console.log("this is the message recieved from the front end", data);
    io.emit('testing', data);
  })
})
//end websocket code

// Check the database connection before starting the app
db.sequelize
  .authenticate()
  .then(() => {
    console.log('Database connection success! Sequelize is ready to use...');

    // Start listening for connections
    httpServer.listen(port, () => console.log(`Listening on port ${port}...`));
  })
  .catch((err) => {
    console.log('Database connection failure.');
    console.error(err);
  });
